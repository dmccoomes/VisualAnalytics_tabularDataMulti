resultPCA$Vaccounted[[2]]
safeCopy$indexSafe=as.vector(factor.scores(safeCopy[,-1],resultPCA)$scores)
head(safeCopy[,c(49:51)]) # just the last three columns
# pysch has its own 'rescale'
safeCopy$indexSafe=scales::rescale(safeCopy$indexSafe, to = c(1, 100))
# you get:
head(safeCopy[,c(49:51)])
safeCopy$RankSafe=rank(-safeCopy$indexSafe)
head(safeCopy[,c(51:52)])
# IN/OUT
positionsIN=grep("_In_", colnames(safe) )
positionsOUT=grep("_Out_", colnames(safe) )
#
safeIN=safe[,c(1,positionsIN)]
safeOUT=safe[,c(1,positionsOUT)]
### IN
resultIN=principal(safeIN[,-1],
nfactors = 1,
scores=T,
normalize=T)
safeIN$indexSafeIN=as.vector(factor.scores(safeIN[,-1],resultIN)$scores)
safeIN$indexSafeIN=scales::rescale(safeIN$indexSafeIN,
to = c(1, 100))
safeIN$RankSafeIN=rank(-safeIN$indexSafeIN)
### OUT
resultOUT=principal(safeOUT[,-1],
nfactors = 1,
scores=T,
normalize=T)
safeOUT$indexSafeOUT=as.vector(factor.scores(safeOUT[,-1],resultOUT)$scores)
safeOUT$indexSafeOUT=scales::rescale(safeOUT$indexSafeOUT,
to = c(1, 100))
safeOUT$RankSafeOUT=rank(-safeOUT$indexSafeOUT)
safeIO=merge(safeIN,safeOUT)
ggplot(safeIO, aes(x= indexSafeIN, y= indexSafeOUT, label=city)) +
geom_point(colour="green") +geom_text(size=2)
library(ggrepel)
install.packages("ggrepel")
library(ggrepel)
set.seed(123)
base <- ggplot(safeIO, aes(x= indexSafeIN, y= indexSafeOUT,
label=city))
plot1 = base + geom_point(color = "red",na.rm=TRUE) #removing missing vals
plot2 = plot1 + geom_text_repel(na.rm=TRUE)
plot2
plot2 +  xlim(0, 50)+ylim(0,50)
distanceAmong <- dist(safe[,-1]) # euclidean distances between the rows
result <- cmdscale(distanceAmong,eig=TRUE, k=2) # k is the number of dim
# data frame prep:
dim1 <- result$points[,1]
dim2 <- result$points[,2]
coordinates=data.frame(dim1,dim2,city=safe$city)
base= ggplot(coordinates,aes(x=dim1, y=dim2,label=city))
base + geom_text(size=2)
library(cluster)
set.seed(123)
# computing clusters
result <- kmeans(safeIO[,-c(1,25,26,53,54)], # not using composites just created
centers = 3) # how many clusters
# adding the cluster
safeIO$cluster=as.factor(result$cluster)
base <- ggplot(safeIO, aes(x= indexSafeIN, y= indexSafeOUT,
label=city,
color = cluster)) # cluster!!
plot1 = base + geom_point(na.rm=TRUE)
plot1 + geom_text_repel(na.rm=TRUE,size=2)
coordinates$cluster=safeIO$cluster
base= ggplot(coordinates,aes(x=dim1, y=dim2,label=city,color=cluster))
base + geom_text(size=2)
library(dbscan)
install.packages("dbscan")
library(dbscan)
kNNdistplot(coordinates[,c(1,2)], k = 3) # notice we use the coordinates
abline(h=30, col = "red", lty=2)
library("fpc")
install.packages("fpc")
library("fpc")
install.packages("fpc", dep=TRUE)
library("fpc")
install.packages("fpc", dep=TRUE)
install.packages("robustbase")
library("fpc")
library("robustbase")
install.packages("fpc", dep=TRUE)
install.packages("robustbase", type="binary")
#library("robustbase")
library("fpc")
# Compute DBSCAN using fpc package
db_res <- fpc::dbscan(coordinates[,c(1,2)], eps = 30, MinPts = 3)
# notice we use the coordinates above
# Plot DBSCAN results
#devtools::install_github("kassambara/factoextra")
library("factoextra")
install.packages("fpc", dep=TRUE)
install.packages("robustbase", type="binary")
#library("robustbase")
library("fpc")
# Compute DBSCAN using fpc package
db_res <- fpc::dbscan(coordinates[,c(1,2)], eps = 30, MinPts = 3)
# notice we use the coordinates above
# Plot DBSCAN results
#devtools::install_github("kassambara/factoextra")
install.packages("factoextra")
install.packages("fpc", dep = TRUE)
library("factoextra")
fviz_cluster(db_res, coordinates[,c(1,2)], stand = FALSE,
geom = 'text',
labelsize = 7,
outlier.labelsize=4,
repel = T,legend='none')
model1=lm(PERSONAL~HEALTH+INFRASTRUCTURE,data=safe2[,-1])
summary(model1)
library(dotwhisker)
install.packages("dotwhisker")
install.packages("broom")
install.packages("dplyr")
library(dotwhisker)
library(broom)
library(dplyr)
install.packages("broom")
install.packages("dplyr")
install.packages("dplyr")
model1_t = tidy(model1) %>%   # we save the result as a tidy object and...
mutate(model = "Model 1") # we add a column 'model' with values 'Model 1'
library(dotwhisker)
library(broom)
library(dplyr)
model1_t = tidy(model1) %>%   # we save the result as a tidy object and...
mutate(model = "Model 1") # we add a column 'model' with values 'Model 1'
model1_t
dwplot(model1_t)
model2=lm(PERSONAL~.,data=safe2[,-1]) # ~. means: all the remaining variables
summary(model2)
model2_t <- tidy(model2) %>% mutate(model = "Model 2")
# combining
allModels=rbind(model1_t, model2_t)
#plotting
dwplot(allModels)
dwplot(allModels) +
geom_vline(xintercept = 0,
colour = "grey60",
linetype = 2) +
scale_colour_grey(start = .1, end = .7)#+theme_bw()
cut=median(safe2$PERSONAL)
safe2$PERSONAL_bi=ifelse(safe2$PERSONAL>cut,
1,0)
logit_PERSONAL = glm(PERSONAL_bi~ .,
data = safe2[,-c(1,5)],
family = "binomial")
summary(logit_PERSONAL)
library(margins)
install.packages("margins")
library(margins)
margins_logit_PERSONAL = margins(logit_PERSONAL)
marginalSummary=summary(margins_logit_PERSONAL)
# just to see the results better:
as.data.frame(marginalSummary)
plot(margins_logit_PERSONAL)
base = ggplot(data = marginalSummary)
eff1=base +  geom_point(aes(factor, AME))
eff1
eff2= eff1 + geom_errorbar(aes(x = factor,
ymin = lower,
ymax = upper))
eff2
eff2= eff1 + geom_errorbar(aes(x = factor, ymin = lower, ymax = upper),
colour=c('blue','violet','violet'))
eff2
##
MESSAGE1="increasing on average 1.7% \n the probability of \n being a safe city"
##
eff3 = eff2 + geom_hline(yintercept = 0) +  theme_minimal()
eff3 + annotate("text", x = 1.5,
y = 0.02,
label = MESSAGE1)
cplot(logit_PERSONAL,x="INFRASTRUCTURE")
digi=cplot(logit_PERSONAL, "DIGITAL",draw = F)
head(digi)
base = ggplot(digi, aes(x = xvals))
p1=base +  geom_line(aes(y = yvals))
p1
p2 = p1+  geom_line(aes(y = upper), linetype = 2) +
geom_line(aes(y = lower), linetype = 2)
p2
p1= base + geom_ribbon(aes(ymin = lower, ymax = upper),
fill = "grey90")
p2 = p1 + geom_line(aes(y = yvals))
p2
p3= p2 + labs(title="Effect of DIGITAL index on PERSONAL index",
x= "DIGITAL", y="Predicted Value")
p3 + theme_bw()
base
# change in REORDER
base= ggplot(data = safeA, aes(x = reorder(variable,
value, median, order=TRUE),
y =reorder(city,
value, median, order=TRUE)))
# THIS IS THE SAME
base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
base
base= ggplot(data = safeA, aes(x = reorder(variable,
value, median, order=TRUE),
y =reorder(city,
value, median, order=TRUE)))
base= ggplot(data = safeA, aes(x = reorder(variable,
value, median, order=TRUE),
y =reorder(city,
value, median, order=TRUE)))
base
base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
heatmap
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
title="Safety inputs and outputs for 70 major cities"
heatmap + aes(title="title")
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
title->"Safety inputs and outputs for 70 major cities"
heatmap + aes(title=title)
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
title="Safety inputs and outputs for 70 major cities"
heatmap + aes(title=title)
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
title="Safety inputs and outputs for 70 major cities"
heatmap + aes(title=c(title))
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
title="Safety inputs and outputs for 70 major cities"
heatmap + aes(title="title")
heatmap=base + geom_tile(aes(fill = value)) +
scale_fill_distiller(palette = "RdYlGn",direction = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1,size = 4),
axis.text.y = element_text(size = 4))
titletext="Safety inputs and outputs for 70 major cities"
heatmap + labs(title=titletext)
library(ggplot2)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=TRUE, message=TRUE)
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
child_mort<-read_dta(url(link)
library(ggplot2)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=TRUE, message=TRUE)
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
child_mort<-read_dta(url(link))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB)) g + geom_boxplot(varwidth=T, fill="grey80") +
base1= ggplot(df1,aes(x=birthatend))
names(child_mort)
df1=df
base1= ggplot(df1,aes(x=birthatend))
base1= ggplot(df1,aes(x=birthatend))
library(uwIntroStats)
library(ggplot2)
library(dplyr)
library(readr)
library(ggiraph)
library(ggiraphExtra)
library(foreign)
library(haven)
library(dotwhisker)
library(broom)
library(dplyr)
library(openxlsx)
knitr::opts_chunk$set(include = T)
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
df <- read_dta(url(link))
# copy data
df1=df
head(df1)
df_aggre <- aggregate(cbind(NEONAT_COMB , INFANT_COMB, U5M_COMB, birthatend, hwdensity, midwifedensity)~provname, data=df1, FUN=mean )
df_aggre
base1= ggplot(df1,aes(x=birthatend))
hist1= base1 + geom_histogram( binwidth =6,boundary=0, fill="grey50")
hist2= hist1 + stat_bin(binwidth = 6, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.5) +
labs(title="Distribuition of birth atendance measures",
caption = "Source: health Information System",
x= "Birth atendance (%)",
y="Frequency") +
scale_x_continuous(breaks = c(0,25,50, 75, 100)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
hist2
df1=df
df_aggre <- aggregate(cbind(NEONAT_COMB , INFANT_COMB, U5M_COMB, birthatend, hwdensity, midwifedensity)~provname, data=df1, FUN=mean )
base1= ggplot(df1,aes(x=birthatend))
hist1= base1 + geom_histogram( binwidth =6,boundary=0, fill="grey50")
hist2= hist1 + stat_bin(binwidth = 6, aes(label=..count..), geom = "text",boundary = 0,vjust=-0.5) +
labs(title="Distribuition of birth atendance measures", caption = "Source: health Information System",
x= "Birth atendance (%)",
y="Frequency") +
scale_x_continuous(breaks = c(0,25,50, 75, 100)) + theme(plot.caption = element_text(hjust = 0),
hist2
base1= ggplot(df1,aes(x=birthatend))
hist1= base1 + geom_histogram( binwidth =6,boundary=0, fill="grey50")
hist2= hist1 + stat_bin(binwidth = 6, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.5) +
labs(title="Distribuition of birth atendance measures",
caption = "Source: health Information System",
x= "Birth atendance (%)",
y="Frequency") +
scale_x_continuous(breaks = c(0,25,50, 75, 100)) +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
hist2
base1= ggplot(df1,aes(x=gdppercap))
hist1= base1 + geom_histogram( binwidth =250,boundary=0, fill="grey50")
hist2= hist1 + stat_bin(binwidth = 250, aes(label=..count..),
geom = "text",boundary = 0,vjust=-0.5) +
labs(title="Distribuition of GDP measures",
caption = "Source: National Institute of Statistics",
x= "GDP (usd)",
y="Frequency") +
theme(plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5))
hist2
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition",
caption="Source: DHS",
x="Province",
y="Under Five Mortality") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition",
caption="Source: DHS",
x="Province",
y="Under Five Mortality") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
library(ggplot2)
library(foreign)
library(haven)
knitr::opts_chunk$set(echo = TRUE, warning=TRUE, message=TRUE)
link="https://github.com/ihsun-uw/Group3_Final_Project/raw/master/child_mortality.dta"
child_mort<-read_dta(url(link))
df1=df
df_aggre <- aggregate(cbind(NEONAT_COMB , INFANT_COMB, U5M_COMB, birthatend, hwdensity, midwifedensity)~provname, data=df1, FUN=mean )
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition",
caption="Source: DHS",
x="Province",
y="Under Five Mortality") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, data=child_mort, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB)), data=child_mort,
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df$child_mort, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
df1=df
df_aggre <- aggregate(cbind(NEONAT_COMB , INFANT_COMB, U5M_COMB, birthatend, hwdensity, midwifedensity)~provname, data=df1, FUN=mean )
g <- ggplot(df$child_mort, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
df1=df
df_aggre <- aggregate(cbind(NEONAT_COMB , INFANT_COMB, U5M_COMB, birthatend, hwdensity, midwifedensity)~provname, data=df1, FUN=mean )
g <- ggplot(df, aes(x=reorder(provname,-U5M_COMB), y=U5M_COMB))
g + geom_boxplot(varwidth=T, fill="grey80") +
labs(title="Boxplot",
subtitle="Under Five mortality Distribuition by Region in Mozambique",
caption="Source: DHS",
x="Province",
y="Under Five Mortality (per thousand)") +
theme(panel.background = element_rect(fill = "gray98",
colour = "black"),
plot.caption = element_text(hjust = 0),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust=0.5),
legend.box.just = c("right","center"),
axis.text.x = element_text(size=7, angle = 45, vjust = 1, hjust=1))
install.packages("openxlsx")
library(openxlsx)
link="https://github.com/EvansDataScience/data/raw/master/safeCitiesIndexAll.xlsx"
safe=read.xlsx(link)
